# API开发规范

## API设计原则
- 遵循RESTful设计原则
- 使用HTTP状态码正确表示响应状态
- 提供一致的API响应格式
- 支持版本控制（如需要）

## 请求/响应格式
- 使用JSON作为数据交换格式
- 请求和响应结构清晰，字段命名规范
- 提供详细的错误信息
- 支持分页（如需要）

## 安全性
- 实现适当的身份验证和授权
- 使用HTTPS进行数据传输
- 输入验证和参数检查
- 防止常见安全漏洞（SQL注入、XSS等）

## 文档规范
- 创建符合OpenAPI 3.0规范的API文档
- 文档位置：`docs/api/openapi.yaml`
- 包含所有端点的详细说明
- 提供请求/响应示例

## 测试要求
- 为每个API端点编写测试
- 测试正常流程和异常情况
- 测试边界条件和参数验证
- 使用集成测试验证端到端功能

## 性能考虑
- 合理使用缓存策略
- 优化数据库查询
- 考虑API限流和负载均衡
- 监控API性能和可用性

## 错误处理
- 统一的错误响应格式
- 提供有意义的错误信息
- 记录错误日志便于调试
- 区分客户端错误和服务器错误
description:
globs:
alwaysApply: false
---
